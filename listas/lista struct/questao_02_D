#include <stdio.h>

struct Pessoa {
    char nome[50];
    int numeroDocumento;
    int idade;
};

void preencherDados(struct Pessoa *pessoa) {
    printf("Digite o nome da pessoa: ");
    fgets(pessoa->nome, sizeof(pessoa->nome), stdin);

    printf("Digite o numero do documento: ");
    scanf("%lld", &(pessoa->numeroDocumento));

    while (getchar() != '\n');

    printf("Digite a idade da pessoa: ");
    scanf("%d", &(pessoa->idade));

    while (getchar() != '\n');
}
void imprimirDados(const struct Pessoa *pessoa) {
    printf("\nDados da Pessoa:\n");
    printf("Nome: %s", pessoa->nome);
    printf("Numero do Documento: %lld\n", pessoa->numeroDocumento);
    printf("Idade: %d\n", pessoa->idade);
}
void atualizarIdade(struct Pessoa *pessoa, int novaIdade) {
    pessoa->idade = novaIdade;
}
void encontrarPessoasExtremas(const struct Pessoa *pessoas, int tamanho, struct Pessoa *maisVelha, struct Pessoa *maisNova) {
    *maisVelha = pessoas[0];
    *maisNova = pessoas[0];

    for (int i = 1; i < tamanho; i++) {
        if (pessoas[i].idade > maisVelha->idade) {
            *maisVelha = pessoas[i];
        }

        if (pessoas[i].idade < maisNova->idade) {
            *maisNova = pessoas[i];
        }
    }
}

int main() {
    struct Pessoa pessoa;

    preencherDados(&pessoa);
    imprimirDados(&pessoa);

    int novaIdade;
    printf("\nDigite a nova idade: ");
    scanf("%d", &novaIdade);
    atualizarIdade(&pessoa, novaIdade);

    printf("\nDados da Pessoa depois da atualizacao da idade:\n");
    imprimirDados(&pessoa);
    
    struct Pessoa pessoaMaisVelha, pessoaMaisNova;

    encontrarPessoasExtremas(pessoas, tamanho, &pessoaMaisVelha, &pessoaMaisNova);

    printf("Pessoa mais velha:\n");
    printf("Nome: %s\n", pessoaMaisVelha.nome);
    printf("Idade: %d\n", pessoaMaisVelha.idade);

    printf("Nome: %s\n", pessoaMaisNova.nome);
    printf("Idade: %d\n", pessoaMaisNova.idade);

    return 0;
}
