Questão 01:
#include <stdio.h>
#include <string.h>

struct Funcionario {
    char nome[50];
    float salario;
    int identificador;
    char cargo[50];
};

void preencherFuncionario(struct Funcionario *funcionario) {
    printf("Digite o nome do funcionário: ");
    scanf("%s", funcionario->nome);

    printf("Digite o salário do funcionário: ");
    scanf("%f", &funcionario->salario);

    printf("Digite o identificador do funcionário: ");
    scanf("%d", &funcionario->identificador);

    printf("Digite o cargo do funcionário: ");
    scanf("%s", funcionario->cargo);
}

void imprimirFuncionario(const struct Funcionario *funcionario) {
    printf("\nInformações do funcionário:\n");
    printf("Nome: %s\n", funcionario->nome);
    printf("Salário: %.2f\n", funcionario->salario);
    printf("Identificador: %d\n", funcionario->identificador);
    printf("Cargo: %s\n", funcionario->cargo);
}

void alterarSalario(struct Funcionario *funcionario, float novoSalario) {
    funcionario->salario = novoSalario;
}

void encontrarMinMaxSalario(const struct Funcionario vetor[], int tamanho) {
    int indiceMaiorSalario = 0;
    int indiceMenorSalario = 0;

    for (int i = 1; i < tamanho; i++) {
        if (vetor[i].salario > vetor[indiceMaiorSalario].salario) {
            indiceMaiorSalario = i;
        }
        if (vetor[i].salario < vetor[indiceMenorSalario].salario) {
            indiceMenorSalario = i;
        }
    }

    // Imprimir informações do funcionário com maior salário
    printf("\nFuncionário com maior salário:\n");
    printf("Cargo: %s\n", vetor[indiceMaiorSalario].cargo);
    printf("Salário: %.2f\n", vetor[indiceMaiorSalario].salario);

    // Imprimir informações do funcionário com menor salário
    printf("\nFuncionário com menor salário:\n");
    printf("Cargo: %s\n", vetor[indiceMenorSalario].cargo);
    printf("Salário: %.2f\n", vetor[indiceMenorSalario].salario);
}

int main() {
    struct Funcionario funcionarios[5]; // Criar um vetor de 5 funcionários

    for (int i = 0; i < 5; i++) {
        printf("\nPreencha as informações para o funcionário %d:\n", i + 1);
        preencherFuncionario(&funcionarios[i]);
    }

    // Imprimir as informações de cada funcionário
    for (int i = 0; i < 5; i++) {
        imprimirFuncionario(&funcionarios[i]);
    }

    // Alterar o salário do primeiro funcionário para 1500
    alterarSalario(&funcionarios[0], 1500.0);

    // Imprimir as informações do primeiro funcionário após a alteração
    printf("\nApós a alteração do salário:\n");
    imprimirFuncionario(&funcionarios[0]);

    // Encontrar funcionário com maior e menor salário
    encontrarMinMaxSalario(funcionarios, 5);

    return 0;
}

Questão 02:

#include <stdio.h>
#include <string.h>

struct Pessoa {
    char nome[50];
    char documento[20];
    int idade;
};

void preencherPessoa(struct Pessoa *pessoa) {
    printf("Digite o nome da pessoa: ");
    scanf("%s", pessoa->nome);

    printf("Digite o número do documento da pessoa: ");
    scanf("%s", pessoa->documento);

    printf("Digite a idade da pessoa: ");
    scanf("%d", &pessoa->idade);
}

void imprimirPessoa(const struct Pessoa *pessoa) {
    printf("\nInformações da pessoa:\n");
    printf("Nome: %s\n", pessoa->nome);
    printf("Número do documento: %s\n", pessoa->documento);
    printf("Idade: %d\n", pessoa->idade);
}

void atualizarIdade(struct Pessoa *pessoa, int novaIdade) {
    pessoa->idade = novaIdade;
}

void encontrarMaisVelhaMaisNova(const struct Pessoa vetor[], int tamanho) {
    int indiceMaisVelha = 0;
    int indiceMaisNova = 0;

    // Encontrar índice da pessoa mais velha e mais nova
    for (int i = 1; i < tamanho; i++) {
        if (vetor[i].idade > vetor[indiceMaisVelha].idade) {
            indiceMaisVelha = i;
        }
        if (vetor[i].idade < vetor[indiceMaisNova].idade) {
            indiceMaisNova = i;
        }
    }

    // Imprimir informações da pessoa mais velha
    printf("\nPessoa mais velha:\n");
    imprimirPessoa(&vetor[indiceMaisVelha]);

    // Imprimir informações da pessoa mais nova
    printf("\nPessoa mais nova:\n");
    imprimirPessoa(&vetor[indiceMaisNova]);
}

int main() {
    struct Pessoa pessoas[5]; 

    for (int i = 0; i < 5; i++) {
        printf("\nPreencha as informações para a pessoa %d:\n", i + 1);
        preencherPessoa(&pessoas[i]);
    }

    // Imprimir as informações de cada pessoa
    for (int i = 0; i < 5; i++) {
        imprimirPessoa(&pessoas[i]);
    }

    // Atualizar a idade da primeira pessoa para 30 anos
    atualizarIdade(&pessoas[0], 30);

    // Imprimir as informações da primeira pessoa após a atualização
    printf("\nApós a atualização da idade:\n");
    imprimirPessoa(&pessoas[0]);

    // Encontrar pessoa mais velha e mais nova
    encontrarMaisVelhaMaisNova(pessoas, 5);

    return 0;
}
